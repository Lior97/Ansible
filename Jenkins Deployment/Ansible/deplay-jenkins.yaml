---
- name: wait for SSH
  hosts: all
  gather_facts: False
  tasks:
    - name: wait for ssh
      wait_for:
        port: 22
        delay: 10
        timeout: 100
        search_regex: OpenSSH
        host: '{{ (ansible_ssh_host|default(ansible_host))|default(inventory_hostname) }}'
      vars:
        ansible_connection: local

- name: Install docker
  hosts: all
  vars_files:
    - vars
  tasks:
    - name: update apt and install docker.io
      when: target_os == 'Ubuntu'
      become: true
      ansible.builtin.apt:
         name:
          - docker.io
          - python3-pip
          - python3
          - docker-compose
         update_cache: yes
         cache_valid_time: 3600

    - name: update yum and install docker.io
      when: target_os == 'Amazon'
      become: true
      vars:
          - ansible_python_interpreter: /usr/bin/python
      ansible.builtin.yum:
         name:
          - docker
          - pip
         update_cache: yes
         state: present

    - name: install docker-compose
      when: target_os == 'Amazon'
      become: true
      ansible.builtin.get_url:
          url: https://github.com/docker/compose/releases/download/2.18.0/docker-compose-Linux-{{ ansible_architecture }}
          dest: /bin/docker-compose
          mode: +x
    
    - name: pip install docker
      become: true
      ansible.builtin.pip:
        name: 
         - docker
         - ansible
        executable: pip3
    
    - name: create user
      when: target_os == 'Ubuntu'
      become: true
      ansible.builtin.user:
        name: "{{ linux_user }}"
        groups: admin, docker

    - name: create user amazon
      when: target_os == 'Amazon'
      become: true
      ansible.builtin.user:
        name: "{{ linux_user }}"
        groups: adm, docker
      become_user: root

    - name: start docker daemon
      become: true
      service:
         name: docker
         state: started
         enabled: true

    - name: start jenkins container with docker socket
      become: true 
      docker_container:
        name: jenkins
        image: jenkins/jenkins:lts
        state: started
        volumes:
                - "/var/run/docker.sock:/var/run/docker.sock"
                - "/usr/bin/docker:/usr/bin/docker"
                - "jenkins_home:/var/jenkins_home"
        ports:
                - "8080:8080"
                - "50000:5000"

    - name: wait for jenkins container
      ansible.builtin.wait_for:
        timeout: 1
      delegate_to: localhost 
    
    - name: docker sock permissions
      shell: sudo chmod 777 /var/run/docker.sock

    - name: install TF in jenkins container
      community.docker.docker_container_exec:
        container: jenkins
        command: /bin/bash -c "{{ item }}"
        become: true
      with_items:
      - "curl -o /home/terraform.zip https://releases.hashicorp.com/terraform/1.5.0/terraform_1.5.0_linux_amd64.zip"
      - "unzip -o /home/terraform.zip"
      - "mv terraform /usr/bin"
      - "rm /home/terraform.zip"
      become: true

    - name: install aws-cli in jenkins container
      community.docker.docker_container_exec:
        container: jenkins
        command: /bin/bash -c "{{item}}"
        user: root
      with_items:
      - "curl -o /home/awscliv2.zip https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip"
      - "unzip -o /home/awscliv2.zip"
      - "./aws/install"
      - "rm /home/awscliv2.zip"
      become: true

    - name: install gettext for envsubst in jenkins container
      community.docker.docker_container_exec:
        container: jenkins
        command: /bin/bash -c "{{ item }}"
        user: root
      with_items:
      - "apt-get update"
      - "apt-get install gettext-base -y"
      become: true

    - name: get initiladminpassword
      ignore_errors: true
      shell: sudo docker exec -it jenkins cat /var/jenkins_home/secrets/initialAdminPassword
      register: jenkins_admin_password
    
    - name: print jenkins password 
      ansible.builtin.debug:
          var: jenkins_admin_password.stdout_lines
